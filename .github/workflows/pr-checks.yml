name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  # Auto-label PRs based on changed files
  auto-label:
    name: Auto Label PR
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
    - name: Label based on changed files
      uses: actions/labeler@v5
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        configuration-path: .github/labeler.yml

  # PR title and description validation
  validate-pr:
    name: Validate PR
    runs-on: ubuntu-latest

    steps:
    - name: Check PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          chore
          ci
          build
        requireScope: false

    - name: Check PR description
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          if (!pr.body || pr.body.length < 20) {
            core.setFailed('PR description is too short. Please provide more details.');
          }

  # Check for required files changes
  required-files:
    name: Check Required Files
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check if docs updated for feature changes
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');

          // Get changed files
          const changedFiles = execSync('git diff --name-only origin/${{ github.base_ref }}...HEAD').toString().split('\n');

          const hasFeatureChanges = changedFiles.some(f =>
            f.startsWith('pages/') || f.includes('langchain_helpers.py')
          );

          const hasDocChanges = changedFiles.some(f =>
            f.endsWith('.md') || f.startsWith('docs/')
          );

          if (hasFeatureChanges && !hasDocChanges) {
            core.warning('‚ö†Ô∏è Feature changes detected but no documentation updates. Consider updating CLAUDE.md or docs/');
          }

  # Size label based on lines changed
  pr-size:
    name: Label PR Size
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
    - name: Label PR size
      uses: codelytv/pr-size-labeler@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        xs_label: 'size/xs'
        xs_max_size: 10
        s_label: 'size/s'
        s_max_size: 100
        m_label: 'size/m'
        m_max_size: 500
        l_label: 'size/l'
        l_max_size: 1000
        xl_label: 'size/xl'

  # Comment on PR with helpful info
  pr-comment:
    name: PR Info Comment
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    permissions:
      pull-requests: write

    steps:
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `## üëã Thanks for your contribution!

          ### üìã PR Checklist
          - [ ] Code follows project style guidelines
          - [ ] Added/updated tests for changes
          - [ ] Updated documentation (if needed)
          - [ ] All CI checks pass
          - [ ] Reviewed own code changes

          ### üîç What happens next?
          1. Automated CI checks will run
          2. A maintainer will review your PR
          3. Address any feedback
          4. Once approved, your PR will be merged!

          **Need help?** Check out [CLAUDE.md](../blob/main/CLAUDE.md) for development guidelines.
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
